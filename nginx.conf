
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;  

    gzip  on;
    gzip_comp_level 5;  # nível médio de compressão
    gzip_min_length 256; # só comprime respostas maiores que 256 bytes
    gzip_proxied any;   # permite compressão para respostas de proxys
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml text/javascript;

    upstream backend { #50/50 de carga - default
        #least_conn - alternate requests to the backend with fewer connections
        server localhost:8000;
        server localhost:8001;
    }

    server {
        listen      8080;
        server_name localhost;

        location / {
            proxy_pass http://locahost:3000;
        }

        location /api {
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-Content-Type-Options "nosniff";
            add_header Referrer-Policy "no-referrer-when-downgrade";
            add_header Content-Security-Policy "default-src 'self'";
            add_header Access-Control-Allow-Origin "*";
            limit_req zone=mylimit burst=10 nodelay;
            proxy_pass http://backend;
        }
        
         location /auth {
            proxy_pass http://localhost:5000;
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*.conf;
}
